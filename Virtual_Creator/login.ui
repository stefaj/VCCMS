<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>login</class>
 <widget class="QWidget" name="login">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>360</width>
    <height>150</height>
   </rect>
  </property>
  <property name="minimumSize">
   <size>
    <width>50</width>
    <height>50</height>
   </size>
  </property>
  <property name="maximumSize">
   <size>
    <width>360</width>
    <height>150</height>
   </size>
  </property>
  <property name="baseSize">
   <size>
    <width>5</width>
    <height>0</height>
   </size>
  </property>
  <property name="windowTitle">
   <string>Login</string>
  </property>
  <property name="windowIcon">
   <iconset resource="content.qrc">
    <normaloff>:/Icon</normaloff>:/Icon</iconset>
  </property>
  <property name="styleSheet">
   <string notr="true">QWidget {
  background: #3C3F41;
  color: white;
  font: bold;
font-size: 12px;
}
QLineEdit{
  background: #2D2E30;
background-color: #2D2E30;
border-radius: 4px;
}
QLineEdit:focus{
  background: #0073C7;
background-color: #0073C7;
border-radius: 4px;
}
/* Button Styles*/
QPushButton {
  border: 1px solid #2D2E30;
  background: #2D2E30;
  color: white;
  font: bold;
    border-radius: 4px;
}
QPushButton:hover:!pressed { 
  border: 2px solid #0073C7;
  background: #0073C7;
    border-radius: 4px;
}
QPushButton:checked { 
  border: 2px solid #0073C7;
  background: #0073C7;
    border-radius: 4px;
}
/* Menu Bar Styles */
QMenuBar {
    background-color:#3C3F41;
}

QMenuBar::item {
    spacing: 3px; /* spacing between menu bar items */
    padding: 10px 32px 10px 32px;
    background: transparent;
    border-radius: 4px;
    color: white;
}

QMenuBar::item:selected { /* when selected using mouse or keyboard */
    background: #0073C7;
}
QMenuBar::item:hover:!pressed{
  border: 2px solid #0073C7;
  background: #0073C7;
}

QMenu::item { 
  padding: 10px 32px 2px 20px;
  font: 14px;
 }
QMenu::item:selected { 
  background: #0073C7; 
  border-radius: 4px;
  color: white;
}
/* Spin Box Styles */
QAbstractSpinBox {
    background-color:#2D2E30;
    border-radius: 4px;
}
QAbstractSpinBox:focus{
  background: #0073C7;
background-color: #0073C7;
border-radius: 4px;
}
QAbstractSpinBox::up-button { 
  border: 0px solid #2D2E30;
}
QAbstractSpinBox::down-button { 
  border: 0px solid #2D2E30;
}
QAbstractSpinBox::up-arrow { 
  image:url(:/Content/spin_arrow_up_white.png);
  width:8;
  height:8;
  border-width: 0;
}
QAbstractSpinBox::down-arrow { 
  image:url(:/Content/spin_arrow_down_white.png);
  width:8;
  height:8;
  border-width: 0;
}
QAbstractSpinBox::up-arrow:hover:!pressed { 
  image:url(:/Content/spin_arrow_up_blue.png);
  width:8;
  height:8;
  border-width: 0;
}
QAbstractSpinBox::down-arrow:hover:!pressed { 
  image:url(:/Content/spin_arrow_down_blue.png);
  width:8;
  height:8;
  border-width: 0;
}

xample where the drop down button of a QComboBox appears &quot;merged&quot; with the combo box frame.

QComboBox {
    border: 1px solid gray;
    border-radius: 3px;
    padding: 1px 18px 1px 3px;
    min-width: 6em;
}

QComboBox:editable {
    background: white;
}

QComboBox:!editable, QComboBox::drop-down:editable {
     background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                 stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                 stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
}

/* QComboBox gets the &quot;on&quot; state when the popup is open */
QComboBox:!editable:on, QComboBox::drop-down:editable:on {
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                stop: 0 #D3D3D3, stop: 0.4 #D8D8D8,
                                stop: 0.5 #DDDDDD, stop: 1.0 #E1E1E1);
}

QComboBox:on { /* shift the text when the popup opens */
    padding-top: 3px;
    padding-left: 4px;
}

QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 15px;

    border-left-width: 1px;
    border-left-color: darkgray;
    border-left-style: solid; /* just a single line */
    border-top-right-radius: 3px; /* same radius as the QComboBox */
    border-bottom-right-radius: 3px;
}

QComboBox::down-arrow {
    image: url(/usr/share/icons/crystalsvg/16x16/actions/1downarrow.png);
}

QComboBox::down-arrow:on { /* shift the arrow when popup is open */
    top: 1px;
    left: 1px;
}</string>
  </property>
  <layout class="QGridLayout" name="gridLayout">
   <item row="1" column="0">
    <widget class="QLabel" name="label_password">
     <property name="text">
      <string>Password</string>
     </property>
    </widget>
   </item>
   <item row="0" column="0">
    <widget class="QLabel" name="label_username">
     <property name="text">
      <string>Username</string>
     </property>
    </widget>
   </item>
   <item row="2" column="0">
    <widget class="QPushButton" name="pushButton_terminate">
     <property name="minimumSize">
      <size>
       <width>100</width>
       <height>32</height>
      </size>
     </property>
     <property name="maximumSize">
      <size>
       <width>100</width>
       <height>16777215</height>
      </size>
     </property>
     <property name="text">
      <string>Exit</string>
     </property>
    </widget>
   </item>
   <item row="2" column="1">
    <widget class="QPushButton" name="pushButton_close">
     <property name="minimumSize">
      <size>
       <width>100</width>
       <height>32</height>
      </size>
     </property>
     <property name="maximumSize">
      <size>
       <width>100</width>
       <height>16777215</height>
      </size>
     </property>
     <property name="text">
      <string>Work Offline</string>
     </property>
    </widget>
   </item>
   <item row="2" column="2">
    <widget class="QPushButton" name="pushButton_login">
     <property name="minimumSize">
      <size>
       <width>100</width>
       <height>32</height>
      </size>
     </property>
     <property name="maximumSize">
      <size>
       <width>100</width>
       <height>16777215</height>
      </size>
     </property>
     <property name="text">
      <string>Login</string>
     </property>
    </widget>
   </item>
   <item row="3" column="0" colspan="3">
    <widget class="QLabel" name="label_download">
     <property name="text">
      <string>Downloading</string>
     </property>
    </widget>
   </item>
   <item row="1" column="1" colspan="2">
    <widget class="QLineEdit" name="lineEdit_password">
     <property name="minimumSize">
      <size>
       <width>32</width>
       <height>32</height>
      </size>
     </property>
     <property name="placeholderText">
      <string/>
     </property>
    </widget>
   </item>
   <item row="0" column="1" colspan="2">
    <widget class="QLineEdit" name="lineEdit_username">
     <property name="minimumSize">
      <size>
       <width>32</width>
       <height>32</height>
      </size>
     </property>
    </widget>
   </item>
   <item row="0" column="3" rowspan="4">
    <widget class="QProgressBar" name="progressBar">
     <property name="value">
      <number>24</number>
     </property>
     <property name="textVisible">
      <bool>true</bool>
     </property>
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
     <property name="invertedAppearance">
      <bool>false</bool>
     </property>
     <property name="textDirection">
      <enum>QProgressBar::TopToBottom</enum>
     </property>
    </widget>
   </item>
  </layout>
 </widget>
 <tabstops>
  <tabstop>lineEdit_username</tabstop>
  <tabstop>lineEdit_password</tabstop>
  <tabstop>pushButton_login</tabstop>
  <tabstop>pushButton_close</tabstop>
  <tabstop>pushButton_terminate</tabstop>
 </tabstops>
 <resources>
  <include location="content.qrc"/>
 </resources>
 <connections/>
</ui>
